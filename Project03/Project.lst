Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/30/17 21:20:22
/Prog01 - Elementary Arithmetic     (Prog01.asm		     Page 1 - 1



				TITLE Prog01 - Elementary Arithmetic     (Prog01.asm)

				; Author: Taylor Liss
				; Email: lisst@oregonstate.edu
				; Course / Project ID  CS271_400_S2017 / Prog03
				; Date: 4/28/2017
				; Due Date: 4/30/207
				; Description: This program greets the user and
				; prompts the user to enter in negative integers.
				; The user will continue to be prompted until they
				; enter a non-negative integerr. The program will
				; then display the sum of all integers entered.
				; The program will also display the average (rounded)
				; of all integers entered. The program will then
				; display a farewell message.

				;**EC#1: This program numbers the lines during input
				;**EC#2: This program calculates and displays the average as a floating-point number, rounded to the nearest .001
				;**EC#3: This program

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 50 72 6F 67 30	projName		BYTE	"Prog03 - Integer Accumulator", 0dh, 0ah, 0
	   33 20 2D 20 49
	   6E 74 65 67 65
	   72 20 41 63 63
	   75 6D 75 6C 61
	   74 6F 72 0D 0A
	   00
 0000001F 42 79 20 54 61	authName		BYTE	"By Taylor Liss", 0dh, 0ah, 0
	   79 6C 6F 72 20
	   4C 69 73 73 0D
	   0A 00
 00000030 57 68 61 74 20	reqNameMess		BYTE	"What is your name? ", 0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 00000044 48 65 6C 6C 6F	helloMes		BYTE	"Hello, ", 0
	   2C 20 00
 0000004C 50 6C 65 61 73	instructMess1	BYTE	"Please enter numbers in [-100, -1].", 0dh, 0ah, 0
	   65 20 65 6E 74
	   65 72 20 6E 75
	   6D 62 65 72 73
	   20 69 6E 20 5B
	   2D 31 30 30 2C
	   20 2D 31 5D 2E
	   0D 0A 00
 00000072 45 6E 74 65 72	instructMess2	BYTE	"Enter a non-negative number when you are finished to see results.", 0dh, 0ah, 0
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 20
	   74 6F 20 73 65
	   65 20 72 65 73
	   75 6C 74 73 2E
	   0D 0A 00
 000000B6 4E 75 6D 62 65	numberPrompt	BYTE	"Number #", 0
	   72 20 23 00
 000000BF 3A 20 00		colon			BYTE	": ", 0
 000000C2 54 68 65 20 6E	tooSmallMess	BYTE	"The number you entered is smaller than -100.", 0dh, 0ah, 0
	   75 6D 62 65 72
	   20 79 6F 75 20
	   65 6E 74 65 72
	   65 64 20 69 73
	   20 73 6D 61 6C
	   6C 65 72 20 74
	   68 61 6E 20 2D
	   31 30 30 2E 0D
	   0A 00
 000000F1 59 6F 75 20 65	totalNumMess1	BYTE	"You entered ", 0
	   6E 74 65 72 65
	   64 20 00
 000000FE 20 76 61 6C 69	totalNumMess2	BYTE	" valid numbers.", 0dh, 0ah, 0
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   0D 0A 00
 00000110 54 68 65 20 73	sumMess			BYTE	"The sum of your valid numbers is ", 0
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 76 61 6C 69
	   64 20 6E 75 6D
	   62 65 72 73 20
	   69 73 20 00
 00000132 54 68 65 20 72	averMess		BYTE	"The rounded average is ", 0
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 00
 0000014A 2E 00			dotMess			BYTE	".", 0
 0000014C 47 6F 6F 64 62	goodbyeMess		BYTE	"Goodbye, ", 0
	   79 65 2C 20 00
 00000156 4F 6E 65 20 6D	caption			BYTE	"One more thing...", 0
	   6F 72 65 20 74
	   68 69 6E 67 2E
	   2E 2E 00
 00000168 54 68 61 6E 6B	thanksMess		BYTE	"Thanks for trying my program!", 0
	   73 20 66 6F 72
	   20 74 72 79 69
	   6E 67 20 6D 79
	   20 70 72 6F 67
	   72 61 6D 21 00
 00000186 20 20 20 20 20	art1			BYTE	"             <(o )___ ", 0dh, 0ah, 0
	   20 20 20 20 20
	   20 20 20 3C 28
	   6F 20 29 5F 5F
	   5F 20 0D 0A 00
 0000019F 20 20 20 20 20	art2			BYTE	"              ( ._> / ", 0dh, 0ah, 0
	   20 20 20 20 20
	   20 20 20 20 28
	   20 2E 5F 3E 20
	   2F 20 0D 0A 00
 000001B8 20 20 20 20 20	art3			BYTE	"               `---'  ", 0dh, 0ah, 0
	   20 20 20 20 20
	   20 20 20 20 20
	   60 2D 2D 2D 27
	   20 20 0D 0A 00

 000001D1 2A 2A 45 43 23	ecMessage1		BYTE	"**EC#1: This program numbers the lines during input", 0dh, 0ah, 0
	   31 3A 20 54 68
	   69 73 20 70 72
	   6F 67 72 61 6D
	   20 6E 75 6D 62
	   65 72 73 20 74
	   68 65 20 6C 69
	   6E 65 73 20 64
	   75 72 69 6E 67
	   20 69 6E 70 75
	   74 0D 0A 00
 00000207 2A 2A 45 43 23	ecMessage2		BYTE	"**EC#2: This program calculates and displays the average as a floating-point number, rounded to the nearest .001", 0dh, 0ah, 0
	   32 3A 20 54 68
	   69 73 20 70 72
	   6F 67 72 61 6D
	   20 63 61 6C 63
	   75 6C 61 74 65
	   73 20 61 6E 64
	   20 64 69 73 70
	   6C 61 79 73 20
	   74 68 65 20 61
	   76 65 72 61 67
	   65 20 61 73 20
	   61 20 66 6C 6F
	   61 74 69 6E 67
	   2D 70 6F 69 6E
	   74 20 6E 75 6D
	   62 65 72 2C 20
	   72 6F 75 6E 64
	   65 64 20 74 6F
	   20 74 68 65 20
	   6E 65 61 72 65
	   73 74 20 2E 30
	   30 31 0D 0A 00
 0000027A 2A 2A 45 43 23	ecMessage3		BYTE	"**EC#3: This program ", 0dh, 0ah, 0
	   33 3A 20 54 68
	   69 73 20 70 72
	   6F 67 72 61 6D
	   20 0D 0A 00

 00000292  00000050 [		userName		DWORD	80 DUP (?)
	    00000000
	   ]

 =-00000064			LOWER_LIMIT = -100
 =-00000001			UPPER_LIMIT = -1

 000003D2 00000000		totalNums		DWORD	?	;keeps track of how many numbers were entered
 000003D6 00000000		userNum			DWORD	?	;the current number entered by the user
 000003DA 00000000		accumulator		DWORD	?	;where all numbers entered in are added together
 000003DE 00000000		average			DWORD	?	;the average of all numbers entered in
 000003E2 00000000		remainder		DWORD	?	;the remainder left over after averaging
 000003E6 00000000		doubleRem		DWORD	?	;double the value of the remainder

 00000000			.code
 00000000			main PROC

				;Display program title & author name
 00000000  BA 00000000 R		mov		edx, OFFSET projName
 00000005  E8 00000000 E		call	WriteString	
 0000000A  BA 0000001F R		mov		edx, OFFSET authName
 0000000F  E8 00000000 E		call	WriteString
 00000014  E8 00000000 E		call	CrLf
 00000019  BA 000001D1 R		mov		edx, OFFSET ecMessage1
 0000001E  E8 00000000 E		call	WriteString
 00000023  BA 00000207 R		mov		edx, OFFSET ecMessage2
 00000028  E8 00000000 E		call	WriteString
 0000002D  BA 0000027A R		mov		edx, OFFSET ecMessage3
 00000032  E8 00000000 E		call	WriteString
 00000037  E8 00000000 E		call	CrLf

				;Get user name
 0000003C  BA 00000030 R		mov		edx, OFFSET reqNameMess
 00000041  E8 00000000 E		call	WriteString

 00000046  BA 00000292 R		mov		edx, OFFSET userName
 0000004B  B9 00000050			mov		ecx, 80
 00000050  E8 00000000 E		call	ReadString

				;Say hello
 00000055  BA 00000044 R		mov		edx, OFFSET helloMes
 0000005A  E8 00000000 E		call	WriteString
 0000005F  BA 00000292 R		mov		edx, OFFSET userName
 00000064  E8 00000000 E		call	WriteString
 00000069  E8 00000000 E		call	CrLf

				;Display isntructions
 0000006E  BA 0000004C R		mov		edx, OFFSET instructMess1
 00000073  E8 00000000 E		call	WriteString
 00000078  BA 00000072 R		mov		edx, OFFSET instructMess2
 0000007D  E8 00000000 E		call	WriteString

 00000082  C7 05 000003D2 R		mov		totalNums, 0	;setup totalNums
	   00000000

 0000008C			mainLoop:	;this loop is where the user enters in values until they enter in a positive integer
 0000008C  FF 05 000003D2 R		inc		totalNums
 00000092  BA 000000B6 R		mov		edx, OFFSET numberPrompt
 00000097  E8 00000000 E		call	WriteString
 0000009C  A1 000003D2 R		mov		eax, totalNums
 000000A1  E8 00000000 E		call	WriteDec
 000000A6  BA 000000BF R		mov		edx, OFFSET	colon
 000000AB  E8 00000000 E		call	WriteString

 000000B0  E8 00000000 E		call	ReadInt
 000000B5  A3 000003D6 R		mov		userNum, eax
 000000BA  83 3D 000003D6 R		cmp		userNum, LOWER_LIMIT	;if number less than -100 is entered
	   9C
 000000C1  7C 11			jl		tooSmall
 000000C3  83 3D 000003D6 R		cmp		userNum, UPPER_LIMIT	;if positive # is entered
	   FF
 000000CA  7F 24			jg		finished

 000000CC  01 05 000003DA R		add		accumulator, eax
 000000D2  EB B8			jmp		mainLoop

 000000D4			tooSmall:	;this is where you end up if the number entered is lower than -100
 000000D4  BA 000000C2 R		mov		edx, OFFSET tooSmallMess
 000000D9  E8 00000000 E		call	WriteString
 000000DE  BA 0000004C R		mov		edx, OFFSET	instructMess1
 000000E3  E8 00000000 E		call	WriteString
 000000E8  FF 0D 000003D2 R		dec		totalNums
 000000EE  EB 9C			jmp		mainLoop

 000000F0			finished:	;this is where you end up once a non-negative number is entered
 000000F0  FF 0D 000003D2 R		dec		totalNums
 000000F6  BA 000000F1 R		mov		edx, OFFSET totalNumMess1
 000000FB  E8 00000000 E		call	WriteString
 00000100  A1 000003D2 R		mov		eax, totalNums
 00000105  E8 00000000 E		call	WriteDec
 0000010A  BA 000000FE R		mov		edx, OFFSET	totalNumMess2
 0000010F  E8 00000000 E		call	WriteString
 00000114  BA 00000110 R		mov		edx, OFFSET sumMess
 00000119  E8 00000000 E		call	WriteString
 0000011E  A1 000003DA R		mov		eax, accumulator
 00000123  E8 00000000 E		call	WriteInt

					;calculate average with the proper math to get the right decimal value
 00000128  A1 000003DA R		mov		eax, accumulator
 0000012D  BB 000003E8			mov		ebx, 1000
 00000132  F7 E3			mul		ebx
 00000134  8B 1D 000003D2 R		mov		ebx, totalNums
 0000013A  99				cdq
 0000013B  F7 FB			idiv	ebx
 0000013D  A3 000003DE R		mov		average, eax
 00000142  F7 DA			neg		edx
 00000144  89 15 000003E2 R		mov		remainder, edx
 0000014A  E8 00000000 E		call	CrLf

					;mulitply remainder by 2
 0000014F  A1 000003E2 R		mov		eax, remainder
 00000154  BB 00000002			mov		ebx, 2
 00000159  F7 E3			mul		ebx
 0000015B  A3 000003E6 R		mov		doubleRem, eax

					;compare doubleRem to totalNums and decrement average (round down) if doubleRem is larger
 00000160  A1 000003E6 R		mov		eax, doubleRem
 00000165  3B 05 000003D2 R		cmp		eax, totalNums
 0000016B  7D 02			jge		decrementAverage
					
 0000016D  EB 0D			jmp		displayResult

 0000016F			decrementAverage:	;decrement average here 
 0000016F  A1 000003DE R		mov		eax, average
 00000174  FF 0D 000003DE R		dec		average
 0000017A  EB 00			jmp		displayResult

 0000017C			displayResult:		;display the rounded decimal here
 0000017C  BA 00000132 R		mov		edx, OFFSET averMess
 00000181  E8 00000000 E		call	WriteString

 00000186  A1 000003DE R		mov		eax, average
 0000018B  BB 000003E8			mov		ebx, 1000
 00000190  99				cdq
 00000191  F7 FB			idiv	ebx	
 00000193  E8 00000000 E		call	WriteInt
 00000198  8B C2			mov		eax, edx
 0000019A  F7 D8			neg		eax
 0000019C  BA 0000014A R		mov		edx, OFFSET dotMess
 000001A1  E8 00000000 E		call	WriteString
 000001A6  E8 00000000 E		call	WriteDec
 000001AB  E8 00000000 E		call	CrLf

					;say goodbye
 000001B0  BA 0000014C R		mov		edx, OFFSET goodbyeMess
 000001B5  E8 00000000 E		call	WriteString
 000001BA  BA 00000292 R		mov		edx, OFFSET userName
 000001BF  E8 00000000 E		call	WriteString
 000001C4  E8 00000000 E		call	CrLf
 000001C9  E8 00000000 E		call	CrLf
 000001CE  BA 00000186 R		mov		edx, OFFSET art1
 000001D3  E8 00000000 E		call	WriteString
 000001D8  BA 0000019F R		mov		edx, OFFSET art2
 000001DD  E8 00000000 E		call	WriteString
 000001E2  BA 000001B8 R		mov		edx, OFFSET art3
 000001E7  E8 00000000 E		call	WriteString
 000001EC  E8 00000000 E		call	CrLf
 000001F1  E8 00000000 E		call	CrLf

					;display message box
 000001F6  E8 00000000 E		call	WaitMsg	
 000001FB  BB 00000156 R		mov		ebx, OFFSET	caption
 00000200  BA 00000168 R		mov		edx, OFFSET thanksMess
 00000205  E8 00000000 E		call	MsgBox

					exit	; exit to operating system
 0000020A  6A 00	   *	    push   +000000000h
 0000020C  E8 00000000 E   *	    call   ExitProcess
 00000211			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/30/17 21:20:22
/Prog01 - Elementary Arithmetic     (Prog01.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000003EA Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000211 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000211 Public STDCALL
  mainLoop . . . . . . . . . . .	L Near	 0000008C _TEXT	
  tooSmall . . . . . . . . . . .	L Near	 000000D4 _TEXT	
  finished . . . . . . . . . . .	L Near	 000000F0 _TEXT	
  decrementAverage . . . . . . .	L Near	 0000016F _TEXT	
  displayResult  . . . . . . . .	L Near	 0000017C _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOWER_LIMIT  . . . . . . . . . .	Number	 -00000064h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UPPER_LIMIT  . . . . . . . . . .	Number	 -00000001h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
accumulator  . . . . . . . . . .	DWord	 000003DA _DATA	
art1 . . . . . . . . . . . . . .	Byte	 00000186 _DATA	
art2 . . . . . . . . . . . . . .	Byte	 0000019F _DATA	
art3 . . . . . . . . . . . . . .	Byte	 000001B8 _DATA	
authName . . . . . . . . . . . .	Byte	 0000001F _DATA	
averMess . . . . . . . . . . . .	Byte	 00000132 _DATA	
average  . . . . . . . . . . . .	DWord	 000003DE _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
caption  . . . . . . . . . . . .	Byte	 00000156 _DATA	
colon  . . . . . . . . . . . . .	Byte	 000000BF _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
dotMess  . . . . . . . . . . . .	Byte	 0000014A _DATA	
doubleRem  . . . . . . . . . . .	DWord	 000003E6 _DATA	
ecMessage1 . . . . . . . . . . .	Byte	 000001D1 _DATA	
ecMessage2 . . . . . . . . . . .	Byte	 00000207 _DATA	
ecMessage3 . . . . . . . . . . .	Byte	 0000027A _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
goodbyeMess  . . . . . . . . . .	Byte	 0000014C _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
helloMes . . . . . . . . . . . .	Byte	 00000044 _DATA	
instructMess1  . . . . . . . . .	Byte	 0000004C _DATA	
instructMess2  . . . . . . . . .	Byte	 00000072 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
numberPrompt . . . . . . . . . .	Byte	 000000B6 _DATA	
projName . . . . . . . . . . . .	Byte	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remainder  . . . . . . . . . . .	DWord	 000003E2 _DATA	
reqNameMess  . . . . . . . . . .	Byte	 00000030 _DATA	
sumMess  . . . . . . . . . . . .	Byte	 00000110 _DATA	
thanksMess . . . . . . . . . . .	Byte	 00000168 _DATA	
tooSmallMess . . . . . . . . . .	Byte	 000000C2 _DATA	
totalNumMess1  . . . . . . . . .	Byte	 000000F1 _DATA	
totalNumMess2  . . . . . . . . .	Byte	 000000FE _DATA	
totalNums  . . . . . . . . . . .	DWord	 000003D2 _DATA	
userName . . . . . . . . . . . .	DWord	 00000292 _DATA	
userNum  . . . . . . . . . . . .	DWord	 000003D6 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
