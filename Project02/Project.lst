Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/23/17 14:47:43
+Prog02 - Fibonacci Numbers     (Prog02.asm		     Page 1 - 1



				TITLE Prog02 - Fibonacci Numbers     (Prog02.asm)

				; Author: Taylor Liss
				; Email: lisst@oregonstate.edu
				; Course / Project ID  CS271_400_S2017 / Prog02
				; Date: 4/19/2017
				; Description: This program calculates Fibonacci numbers. It
				;	asks for the users name and displays a greeting and a
				;	farewell to them. It also validates that the user only
				;	enters terms between the range [1 .. 46]. It displays
				;	the results in aligned columns. It also colors the columns.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; (insert constant definitions here)

 00000000			.data
 00000000 00000000		rangeNum	DWORD	?		;range of fibonacci terms
 00000004 00000000		nextNum		DWORD	?		;next fibonacci number in the sequence
 00000008 00000000		columnNum	DWORD	?		;counter for column place

 = 0000002E			UPPER_LIMIT = 46	;max size for Fibonacci range
 = 00000001			LOWER_LIMIT = 1		;min size for Fibonacci range

 0000000C  00000050 [		userName	DWORD	80 DUP (?)
	    00000000
	   ]

 0000014C 09 09 50 72 6F	titleMes	BYTE	"		Prog02 - Fibonacci Numbers		by Taylor Liss", 0dh, 0ah, 0
	   67 30 32 20 2D
	   20 46 69 62 6F
	   6E 61 63 63 69
	   20 4E 75 6D 62
	   65 72 73 09 09
	   62 79 20 54 61
	   79 6C 6F 72 20
	   4C 69 73 73 0D
	   0A 00
 0000017B 2A 2A 45 43 20	EC1Mes		BYTE	"**EC #1: This program list the Fibonacci terms in aligned columns", 0dh, 0ah, 0
	   23 31 3A 20 54
	   68 69 73 20 70
	   72 6F 67 72 61
	   6D 20 6C 69 73
	   74 20 74 68 65
	   20 46 69 62 6F
	   6E 61 63 63 69
	   20 74 65 72 6D
	   73 20 69 6E 20
	   61 6C 69 67 6E
	   65 64 20 63 6F
	   6C 75 6D 6E 73
	   0D 0A 00
 000001BF 2A 2A 45 43 20	EC2Mes		BYTE	"**EC #2: This program colorizes the columns", 0dh, 0ah, 0
	   23 32 3A 20 54
	   68 69 73 20 70
	   72 6F 67 72 61
	   6D 20 63 6F 6C
	   6F 72 69 7A 65
	   73 20 74 68 65
	   20 63 6F 6C 75
	   6D 6E 73 0D 0A
	   00
 000001ED 57 68 61 74 27	nameMes		BYTE	"What's your name? ", 0
	   73 20 79 6F 75
	   72 20 6E 61 6D
	   65 3F 20 00
 00000200 48 65 6C 6C 6F	helloMes	BYTE	"Hello, ", 0
	   2C 20 00
 00000208 45 6E 74 65 72	fibPrompt	BYTE	"Enter the number of Fibonacci terms to be displayed", 0dh, 0ah, 0
	   20 74 68 65 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   46 69 62 6F 6E
	   61 63 63 69 20
	   74 65 72 6D 73
	   20 74 6F 20 62
	   65 20 64 69 73
	   70 6C 61 79 65
	   64 0D 0A 00
 0000023E 47 69 76 65 20	fibPrompt2	BYTE	"Give the number as an integer in the range [1 .. 46]", 0dh, 0ah, 0
	   74 68 65 20 6E
	   75 6D 62 65 72
	   20 61 73 20 61
	   6E 20 69 6E 74
	   65 67 65 72 20
	   69 6E 20 74 68
	   65 20 72 61 6E
	   67 65 20 5B 31
	   20 2E 2E 20 34
	   36 5D 0D 0A 00
 00000275 48 6F 77 20 6D	fibPrompt3	BYTE	"How many Fibonacci terms do you want? ", 0
	   61 6E 79 20 46
	   69 62 6F 6E 61
	   63 63 69 20 74
	   65 72 6D 73 20
	   64 6F 20 79 6F
	   75 20 77 61 6E
	   74 3F 20 00
 0000029C 52 65 73 75 6C	certMes		BYTE	"Results certified by Taylor Liss", 0dh, 0ah, 0
	   74 73 20 63 65
	   72 74 69 66 69
	   65 64 20 62 79
	   20 54 61 79 6C
	   6F 72 20 4C 69
	   73 73 0D 0A 00
 000002BF 47 6F 6F 64 62	goodbyeMes	BYTE	"Goodbye, ", 0
	   79 65 2C 20 00

 000002C9 4F 75 74 20 6F	invalidMes	BYTE	"Out of range. Enter a number in [1 .. 46]", 0
	   66 20 72 61 6E
	   67 65 2E 20 45
	   6E 74 65 72 20
	   61 20 6E 75 6D
	   62 65 72 20 69
	   6E 20 5B 31 20
	   2E 2E 20 34 36
	   5D 00

				;**EC 1: The following strings are used to display the numbers in aligned columns
 000002F3 20 20 00		space2		BYTE	"  ", 0
 000002F6 20 20 20 00		space3		BYTE	"   ", 0
 000002FA 20 20 20 20 00	space4		BYTE	"    ", 0
 000002FF 20 20 20 20 20	space5		BYTE	"     ", 0
	   00
 00000305 20 20 20 20 20	space6		BYTE	"      ", 0
	   20 00
 0000030C 20 20 20 20 20	space7		BYTE	"       ", 0
	   20 20 00
 00000314 20 20 20 20 20	space8		BYTE	"        ", 0
	   20 20 20 00
 0000031D 20 20 20 20 20	space9		BYTE	"         ", 0
	   20 20 20 20 00
 00000327 20 20 20 20 20	space10		BYTE	"          ", 0
	   20 20 20 20 20
	   00

				;**EC 2: The following is used to assist the changing of colors:
 00000332 00000000		tempNum		DWORD	?

 00000000			.code
 00000000			main PROC
				;-----introduction-----
				;Display program title
 00000000  BA 0000014C R		mov		edx, OFFSET titleMes
 00000005  E8 00000000 E		call	WriteString	
 0000000A  BA 0000017B R		mov		edx, OFFSET EC1Mes
 0000000F  E8 00000000 E		call	WriteString
 00000014  BA 000001BF R		mov		edx, OFFSET EC2Mes
 00000019  E8 00000000 E		call	WriteString
 0000001E  E8 00000000 E		call	CrLf

				;Get user name
 00000023  BA 000001ED R		mov		edx, OFFSET nameMes
 00000028  E8 00000000 E		call	WriteString

 0000002D  BA 0000000C R		mov		edx, OFFSET userName
 00000032  B9 00000050			mov		ecx, 80
 00000037  E8 00000000 E		call	ReadString

				;Say hello
 0000003C  BA 00000200 R		mov		edx, OFFSET helloMes
 00000041  E8 00000000 E		call	WriteString
 00000046  BA 0000000C R		mov		edx, OFFSET userName
 0000004B  E8 00000000 E		call	WriteString
 00000050  E8 00000000 E		call	CrLf

				;-----userInstructions-----
				;Ask for for number of Fibonacci terms
 00000055  BA 00000208 R		mov		edx, OFFSET fibPrompt
 0000005A  E8 00000000 E		call	WriteString
 0000005F  BA 0000023E R		mov		edx, OFFSET fibPrompt2
 00000064  E8 00000000 E		call	WriteString
 00000069  E8 00000000 E		call	CrLf

				;-----getUserData-----
 0000006E			rangePrompt:	;Get range
 0000006E  BA 00000275 R		mov		edx, OFFSET fibPrompt3
 00000073  E8 00000000 E		call	WriteString
 00000078  E8 00000000 E		call	ReadInt
 0000007D  A3 00000000 R		mov		rangeNum, eax

				;Check to see if number is 1-46
 00000082  83 F8 01			cmp		eax, LOWER_LIMIT
 00000085  0F 8C 000000E8		jl		notValid
 0000008B  83 F8 2E			cmp		eax, UPPER_LIMIT
 0000008E  0F 8F 000000DF		jg		notValid

				;-----displayFibs-----
				;Setup fibonacci loop
 00000094  B8 00000000			mov		eax, 0
 00000099  BB 00000001			mov		ebx, 1
 0000009E  8B 0D 00000000 R		mov		ecx, rangeNum
 000000A4  C7 05 00000004 R		mov		nextNum, 1
	   00000001
 000000AE  C7 05 00000008 R		mov		columnNum, 1
	   00000001
 000000B8			fibLoop:	;displayFibs
 000000B8  E9 0000015E			jmp		changeColor
 000000BD			loopMain:
 000000BD  A3 00000004 R		mov		nextNum, eax
 000000C2  03 C3			add		eax, ebx
 000000C4  E8 00000000 E		call	WriteDec
 000000C9  8B 1D 00000004 R		mov		ebx, nextNum

				;EC1: This code formats the strings into columns based on the length of the length of the integer
 000000CF  83 F8 0A			cmp		eax, 10
 000000D2  0F 8C 000000AF		jl		addTenSpace

 000000D8  83 F8 64			cmp		eax, 100
 000000DB  0F 8C 000000B2		jl		addNineSpace

 000000E1  3D 000003E8			cmp		eax, 1000
 000000E6  0F 8C 000000B3		jl		addEightSpace

 000000EC  3D 00002710			cmp		eax, 10000
 000000F1  0F 8C 000000B4		jl		addSevenSpace

 000000F7  3D 000186A0			cmp		eax, 100000
 000000FC  0F 8C 000000B5		jl		addSixSpace

 00000102  3D 000F4240			cmp		eax, 1000000
 00000107  0F 8C 000000B6		jl		addFiveSpace

 0000010D  3D 00989680			cmp		eax, 10000000
 00000112  0F 8C 000000B7		jl		addFourSpace

 00000118  3D 05F5E100			cmp		eax, 100000000
 0000011D  0F 8C 000000B8		jl		addThreeSpace

 00000123  3D 3B9ACA00			cmp		eax, 1000000000
 00000128  0F 8C 000000B9		jl		addTwoSpace

 0000012E  E9 000000C0			jmp		columnCheck	;This ensures that a column check will always be done

 00000133			continueLoop:
 00000133  E2 83			loop	fibLoop

				;-----farewell-----
				;Farewell
 00000135  B8 00000007			mov		eax, lightGray + (black * 16)
 0000013A  E8 00000000 E		call	SetTextColor
 0000013F  E8 00000000 E		call	CrLf
 00000144  E8 00000000 E		call	CrLf
 00000149  BA 0000029C R		mov		edx, OFFSET certMes
 0000014E  E8 00000000 E		call	WriteString
 00000153  BA 000002BF R		mov		edx, OFFSET goodbyeMes
 00000158  E8 00000000 E		call	WriteString
 0000015D  BA 0000000C R		mov		edx, OFFSET userName
 00000162  E8 00000000 E		call	WriteString
 00000167  E8 00000000 E		call	CrLf

					exit	;exit to operating system
 0000016C  6A 00	   *	    push   +000000000h
 0000016E  E8 00000000 E   *	    call   ExitProcess

 00000173			notValid:	;invalid range entered
 00000173  BA 000002C9 R		mov		edx, OFFSET invalidMes
 00000178  E8 00000000 E		call	WriteString
 0000017D  E8 00000000 E		call	CrLf
 00000182  E9 FFFFFEE7			jmp		rangePrompt

				;EC 1: The following labels are used to format the numbers into columns
 00000187			addTenSpace:
 00000187  BA 00000327 R		mov		edx, OFFSET space10
 0000018C  E8 00000000 E		call	WriteString
 00000191  EB 60			jmp		columnCheck

 00000193			addNineSpace:
 00000193  BA 0000031D R		mov		edx, OFFSET space9
 00000198  E8 00000000 E		call	WriteString
 0000019D  EB 54			jmp		columnCheck

 0000019F			addEightSpace:
 0000019F  BA 00000314 R		mov		edx, OFFSET space8
 000001A4  E8 00000000 E		call	WriteString
 000001A9  EB 48			jmp		columnCheck

 000001AB			addSevenSpace:
 000001AB  BA 0000030C R		mov		edx, OFFSET space7
 000001B0  E8 00000000 E		call	WriteString
 000001B5  EB 3C			jmp		columnCheck

 000001B7			addSixSpace:
 000001B7  BA 00000305 R		mov		edx, OFFSET space6
 000001BC  E8 00000000 E		call	WriteString
 000001C1  EB 30			jmp		columnCheck

 000001C3			addFiveSpace:
 000001C3  BA 000002FF R		mov		edx, OFFSET space5
 000001C8  E8 00000000 E		call	WriteString
 000001CD  EB 24			jmp		columnCheck

 000001CF			addFourSpace:
 000001CF  BA 000002FA R		mov		edx, OFFSET space4
 000001D4  E8 00000000 E		call	WriteString
 000001D9  EB 18			jmp		columnCheck

 000001DB			addThreeSpace:
 000001DB  BA 000002F6 R		mov		edx, OFFSET space3
 000001E0  E8 00000000 E		call	WriteString
 000001E5  EB 0C			jmp		columnCheck

 000001E7			addTwoSpace:
 000001E7  BA 000002F3 R		mov		edx, OFFSET space2
 000001EC  E8 00000000 E		call	WriteString
 000001F1  EB 00			jmp		columnCheck

				;This checks to see if the last number was placed into the fifth column
 000001F3			columnCheck:
 000001F3  83 3D 00000008 R		cmp		columnNum, 5
	   05
 000001FA  74 0B			je		addRow
 000001FC  FF 05 00000008 R		inc		columnNum
 00000202  E9 FFFFFF2C			jmp		continueLoop

 00000207			addRow:		;adds a new row if the last number printed was the fifth number in a row.
 00000207  E8 00000000 E		call	CrLf
 0000020C  C7 05 00000008 R		mov		columnNum, 1
	   00000001
 00000216  E9 FFFFFF18			jmp		continueLoop

				;EC#2: This code is used to color the columns
 0000021B			changeColor: 
 0000021B  A3 00000332 R		mov		tempNum, eax
 00000220  83 3D 00000008 R		cmp		columnNum, 1
	   01
 00000227  74 26			je		changeRed
 00000229  83 3D 00000008 R		cmp		columnNum, 3
	   03
 00000230  74 1D			je		changeRed
 00000232  83 3D 00000008 R		cmp		columnNum, 5
	   05
 00000239  74 14			je		changeRed
 0000023B  B8 00000042			mov		eax, green + (red * 16)
 00000240  E8 00000000 E		call	SetTextColor
 00000245  A1 00000332 R		mov		eax, tempNum
 0000024A  E9 FFFFFE6E			jmp		loopMain

 0000024F			changeRed:
 0000024F  B8 00000024			mov		eax, red + (green * 16)
 00000254  E8 00000000 E		call	SetTextColor
 00000259  A1 00000332 R		mov		eax, tempNum
 0000025E  E9 FFFFFE5A			jmp		loopMain
					

 00000263			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/23/17 14:47:43
+Prog02 - Fibonacci Numbers     (Prog02.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000336 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000263 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000263 Public STDCALL
  rangePrompt  . . . . . . . . .	L Near	 0000006E _TEXT	
  fibLoop  . . . . . . . . . . .	L Near	 000000B8 _TEXT	
  loopMain . . . . . . . . . . .	L Near	 000000BD _TEXT	
  continueLoop . . . . . . . . .	L Near	 00000133 _TEXT	
  notValid . . . . . . . . . . .	L Near	 00000173 _TEXT	
  addTenSpace  . . . . . . . . .	L Near	 00000187 _TEXT	
  addNineSpace . . . . . . . . .	L Near	 00000193 _TEXT	
  addEightSpace  . . . . . . . .	L Near	 0000019F _TEXT	
  addSevenSpace  . . . . . . . .	L Near	 000001AB _TEXT	
  addSixSpace  . . . . . . . . .	L Near	 000001B7 _TEXT	
  addFiveSpace . . . . . . . . .	L Near	 000001C3 _TEXT	
  addFourSpace . . . . . . . . .	L Near	 000001CF _TEXT	
  addThreeSpace  . . . . . . . .	L Near	 000001DB _TEXT	
  addTwoSpace  . . . . . . . . .	L Near	 000001E7 _TEXT	
  columnCheck  . . . . . . . . .	L Near	 000001F3 _TEXT	
  addRow . . . . . . . . . . . .	L Near	 00000207 _TEXT	
  changeColor  . . . . . . . . .	L Near	 0000021B _TEXT	
  changeRed  . . . . . . . . . .	L Near	 0000024F _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
EC1Mes . . . . . . . . . . . . .	Byte	 0000017B _DATA	
EC2Mes . . . . . . . . . . . . .	Byte	 000001BF _DATA	
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOWER_LIMIT  . . . . . . . . . .	Number	 00000001h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UPPER_LIMIT  . . . . . . . . . .	Number	 0000002Eh   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
certMes  . . . . . . . . . . . .	Byte	 0000029C _DATA	
columnNum  . . . . . . . . . . .	DWord	 00000008 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fibPrompt2 . . . . . . . . . . .	Byte	 0000023E _DATA	
fibPrompt3 . . . . . . . . . . .	Byte	 00000275 _DATA	
fibPrompt  . . . . . . . . . . .	Byte	 00000208 _DATA	
goodbyeMes . . . . . . . . . . .	Byte	 000002BF _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
helloMes . . . . . . . . . . . .	Byte	 00000200 _DATA	
invalidMes . . . . . . . . . . .	Byte	 000002C9 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
nameMes  . . . . . . . . . . . .	Byte	 000001ED _DATA	
nextNum  . . . . . . . . . . . .	DWord	 00000004 _DATA	
rangeNum . . . . . . . . . . . .	DWord	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
space10  . . . . . . . . . . . .	Byte	 00000327 _DATA	
space2 . . . . . . . . . . . . .	Byte	 000002F3 _DATA	
space3 . . . . . . . . . . . . .	Byte	 000002F6 _DATA	
space4 . . . . . . . . . . . . .	Byte	 000002FA _DATA	
space5 . . . . . . . . . . . . .	Byte	 000002FF _DATA	
space6 . . . . . . . . . . . . .	Byte	 00000305 _DATA	
space7 . . . . . . . . . . . . .	Byte	 0000030C _DATA	
space8 . . . . . . . . . . . . .	Byte	 00000314 _DATA	
space9 . . . . . . . . . . . . .	Byte	 0000031D _DATA	
tempNum  . . . . . . . . . . . .	DWord	 00000332 _DATA	
titleMes . . . . . . . . . . . .	Byte	 0000014C _DATA	
userName . . . . . . . . . . . .	DWord	 0000000C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
